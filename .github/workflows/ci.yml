name: CI BOUT - Smart Contracts

on:
  push:
    branches: [main, develop]
    paths: ["backend/**"]
  pull_request:
    branches: [main]
    paths: ["backend/**"]

jobs:
  test-contracts:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Cache Foundry dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.foundry/cache
            ./backend/cache
            ./backend/out
          key: foundry-${{ runner.os }}-${{ hashFiles('**/foundry.toml') }}
          restore-keys: |
            foundry-${{ runner.os }}-

      - name: Install dependencies
        run: forge install

      - name: Build contracts
        run: forge build --sizes

      - name: Run tests with gas report
        run: forge test -vvv --gas-report

      - name: Generate coverage report
        run: forge coverage --report summary

      - name: Check coverage threshold
        run: |
          forge coverage --report summary > coverage_output.txt
          echo "=== Coverage Output ==="
          cat coverage_output.txt
          echo "======================="

          COVERAGE=$(grep -i "overall" coverage_output.txt | grep -oE '[0-9]+\.?[0-9]*' | head -1 || echo "0")
          echo "Extracted coverage: $COVERAGE%"

          if [ -z "$COVERAGE" ] || [ "$COVERAGE" = "0" ]; then
            echo "⚠️ Could not extract coverage, skipping threshold check"
            exit 0
          fi

          # Convert to integer for comparison
          COVERAGE_INT=$(echo "$COVERAGE" | cut -d'.' -f1)

          if [ "$COVERAGE_INT" -lt 70 ]; then
            echo "❌ Coverage below 70%: $COVERAGE%"
            exit 1
          else
            echo "✅ Coverage above 70%: $COVERAGE%"
          fi
